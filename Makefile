# Ce Makefile permet de compiler des fichiers C++ dont les fichiers source
# se trouvent dans src, avec des fichier .h dans include et avec SFML
# L'executable ainsi que les dossiers necessaires sont ensuite deplaces vers
# le build, il ne reste plus qu'a copier ce fichier pour pouvoir jouer
# P.S. Si on ne veut pas deplacer les fichiers a la fin, commenter les 3
# lignes move et xcopy dans la rubrique all

# Executable name
TARGET = PlatformGame

SRC_DIR = src/

# List of source Files
SRC = src\init.cpp src\main.cpp src\input.cpp src\render.cpp src\character.cpp src\gameCheck.cpp src\collect.cpp src\gameState.cpp

# Executable Folder
EXEFOLDER = build

# Resource Folder 1
FOLDERRES1 = res

# Resource Folder 2
FOLDERRES2 = videvidevidevidevide # videvidevidevidevide

# ---------------------------------------------------------

# Compiler
CXX = g++

# Compiler include and Flags (SFML and .h files)
CXXFLAGS = -I"path1" -Iinclude -Wall -std=c++17 # Options de compilation

# Compiler libraries (SFML)
LDFLAGS = -L"path2" -lsfml-graphics -lsfml-window -lsfml-audio -lsfml-system # Bibliothèques SFML

# Object files
OBJ = $(SRC:.cpp=.o) # Object files generated by source files

# Cible principale : compilation complète du programme
all: $(TARGET)
	REM @move $(TARGET).exe $(EXEFOLDER)
	REM @xcopy $(FOLDERRES1) "$(EXEFOLDER)\$(FOLDERRES1)" /E /I /Y
	REM @xcopy $(FOLDERRES2) "$(EXEFOLDER)\$(FOLDERRES2)" /E /I /Y

# Link object files together to create the executable
$(TARGET): $(OBJ)
	$(CXX) -o $@ $^ $(LDFLAGS)

# Rule to compile source files into object files
$.o: %.cpp
	$(CXX) $(CXXFLAGS) -c $< -o $@

# Clean up .o generated files
clean:
	del /Q $(OBJ)

# Phony targets 
.PHONY: all clean
